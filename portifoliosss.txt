'use client'
import React, { useState, useEffect } from 'react'
import Slider from 'react-slick'
import 'slick-carousel/slick/slick.css'
import 'slick-carousel/slick/slick-theme.css'
import styles from './moduleCss/portifolio.module.css'
import { portifolioData } from '@/utils/data'
import {  GitHubIcon } from '@/components/social-icons'
import Link from 'next/link'
import axios from 'axios'
import {project} from '@/types/project'

const Portifolio = ({ projects }: { projects: project[] }) => {

  function SocialLink({icon: Icon, ...props}: any){
    return(
      <Link className='group -m-1 p-1'{...props}>
        <Icon className={styles.social}/>
      </Link>
    )
  }

  const [currentSlide, setCurrentSlide] = useState(0);
  const [slidesToShow, setSlidesToShow] = useState(5);

  const updateSlidesToShow = () => {
    
    if (window.innerWidth <= 1750) {
      setSlidesToShow(4);
      if (window.innerWidth <= 1450){
        setSlidesToShow(3)
      }
    } if (window.innerWidth <= 900) {
      setSlidesToShow(2);
    } if(window.innerWidth <= 725) {
      setSlidesToShow(1);
    }
  };

  useEffect(() => {
    window.addEventListener('resize', updateSlidesToShow);
    updateSlidesToShow();
    return () => window.removeEventListener('resize', updateSlidesToShow);
  }, [])

  const settings = {
    dots: true,
    infinite: true,
    speed: 2000,
    slidesToShow: slidesToShow,
    slidesToScroll: 2,
    draggable: true,
    swipeToSlide: true,
    autoplay: true,
    autoplaySpeed: 3000,
    afterChange: (index: number) => setCurrentSlide(index),
  };

  return (
    <div>
      <div className="mx-auto flex max-w-[58rem] flex-col items-center space-y-4 text-center">
        <h2 className="font-heading text-3xl leading-[1.1] sm:text-3xl md:text-6xl">
          Projects
        </h2>
        <p className="max-w-[85%] leading-normal text-muted-foreground sm:text-lg sm:leading-7">
          Featured projects
        </p>
      </div>
      <div className={styles.container}>
        <div className={styles.main}>
         
          <Slider {...settings} className={styles.slider}>
            {projects && projects.map((project, index) => (
              <div className={styles.card} key={index}>
                <div className={styles.title}>{project.title}</div>
                <div className={styles.aboutProject}>{project.descproject}</div>
                <div className={styles.gitLink}><SocialLink target="_blank" href={project.linkgit} icon={GitHubIcon}/></div>
                <div className={styles.gitLink}><SocialLink target="_blank" href={`/project/${project.slug}`} icon={GitHubIcon}/></div>
                <div className={styles.gitLink}><SocialLink target="_blank" href={`/project/${project.linkproject}`} icon={GitHubIcon}/></div>
              </div>
            ))}
          </Slider>
        </div>
        <div className={styles.dotsContainer}>
            {projects && projects.map((project) => (
            <div key={project.id}className={`${styles.dot} 
            ${project.id === currentSlide ? 
            styles.activeDot : ''}`}
            onClick={() => setCurrentSlide(project.id)}
            ></div>
         ))}
        </div>
      </div>
    </div>
  )
}

//SSG 
export const getStaticProps = async () => {
  try {
  const res = await axios.get('http://127.0.0.1:2000/projects')
    const projects = res.data
    console.log(projects)
    return {
      props: { projects },
      revalidate: 10,
    }
  } catch (error) {
    console.error('Erro ao obter projetos:', error)
    return {
      props: { projects: [{ id: 1, title: 'Test Project' }] },
      revalidate: 10,
    }
  }
}

export default Portifolio